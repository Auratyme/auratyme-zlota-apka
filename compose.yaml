name: auratyme

services:
  # -----------------------------------------------------------------------
  # schedules
  # -----------------------------------------------------------------------
  schedules:
    build:
      context: ./schedules
      target: dev
    env_file:
      - path: ./schedules/.env.dev
        required: true
      - path: ./schedules/.env
        required: false
    volumes:
      - ./schedules/src:/app/src
      - ./schedules/test:/app/test
      - type: bind
        source: ./schedules/tsconfig.json
        target: /app/tsconfig.json
      - type: bind
        source: ./schedules/package.json
        target: /app/package.json
      - type: bind
        source: ./schedules/package-lock.json
        target: /app/package-lock.json
      - type: bind
        source: ./schedules/drizzle.config.ts
        target: /app/drizzle.config.ts
      - type: bind
        source: ./schedules/jest.config.ts
        target: /app/jest.config.ts
    depends_on:
      schedules-db:
        condition: service_healthy
      auth:
        condition: service_healthy
      broker:
        condition: service_healthy
    healthcheck:
      test: curl localhost
      timeout: 10s
      start_period: 15s
    ports:
      - 3000:3000

  schedules-db:
    build:
      context: ./schedules-db
    env_file:
      - path: ./schedules-db/.env.dev
        required: true
      - path: ./schedules-db/.env
        required: false
    volumes:
      - schedules-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD', 'pg_isready']
      timeout: 30s
      retries: 5
      start_period: 20s
  # -----------------------------------------------------------------------
  # schedules ai
  # -----------------------------------------------------------------------
  schedules-ai:
    build:
      context: ./schedules-ai
      target: dev
    env_file:
      - path: ./schedules-ai/.env.dev
        required: true
      - path: ./schedules-ai/.env
        required: false
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [compute, utility, gpu]
    runtime: nvidia
    volumes:
      - ./schedules-ai:/app
      - ./schedules-ai/cache:/app/cache
    depends_on:
      schedules-ai-db:
        condition: service_healthy
      broker:
        condition: service_healthy
    healthcheck:
      test: curl localhost
      timeout: 10s
      start_period: 30s

  schedules-ai-db:
    build:
      context: ./schedules-ai-db
    env_file:
      - path: ./schedules-ai-db/.env.dev
        required: true
      - path: ./schedules-ai-db/.env
        required: false
    volumes:
      - schedules-ai-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD', 'pg_isready']
      timeout: 30s
      retries: 5
      start_period: 20s
  # -----------------------------------------------------------------------
  # auth
  # -----------------------------------------------------------------------
  auth:
    build:
      context: ./auth
      target: dev
    env_file:
      - path: ./auth/.env.dev
        required: true
      - path: ./auth/.env
        required: false
    volumes:
      - ./auth/import:/opt/keycloak/data/import
    ports:
      - 9000:8080
    depends_on:
      auth-db:
        condition: service_healthy
    healthcheck:
      test: timeout 10s bash -c ':> /dev/tcp/localhost/8080'
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 100s

  auth-db:
    build:
      context: ./auth-db
    env_file:
      - path: ./auth-db/.env.dev
        required: true
      - path: ./auth-db/.env
        required: false
    volumes:
      - auth-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD', 'pg_isready']
      timeout: 30s
      retries: 5
      start_period: 20s
  # -----------------------------------------------------------------------
  # other
  # -----------------------------------------------------------------------
  broker:
    build:
      context: ./broker
      target: dev
    env_file:
      - path: ./broker/.env.dev
        required: true
      - path: ./broker/.env
        required: false
    volumes:
      - broker-data:/var/lib/rabbitmq
    healthcheck:
      test: timeout 10s bash -c ':> /dev/tcp/localhost/5672'
      timeout: 30s
      retries: 5
      start_period: 30s

  api-gateway:
    build:
      context: ./api-gateway
      target: dev
    env_file:
      - path: ./api-gateway/.env.dev
        required: true
      - path: ./api-gateway/.env
        required: false
    volumes:
      - type: bind
        source: ./api-gateway/etc/nginx/nginx.conf
        target: /etc/nginx/nginx.conf
      - type: bind
        source: ./api-gateway/etc/nginx/proxy_params.conf
        target: /etc/nginx/proxy_params.conf
      - ./api-gateway/html:/usr/share/nginx/html
    ports:
      - 80:80
    depends_on:
      auth:
        condition: service_healthy
      schedules-ai:
        condition: service_healthy
      schedules:
        condition: service_healthy

  ngrok:
    build: ./ngrok
    env_file:
      - path: ./ngrok/.env.dev
        required: true
      - path: ./ngrok/.env
        required: false
    volumes:
      - type: bind
        source: ./ngrok/ngrok.yml
        target: /etc/ngrok.yml
    ports:
      - 4040:4040
  # -----------------------------------------------------------------------
volumes:
  auth-db-data:
  schedules-db-data:
  broker-data:
  schedules-ai-db-data:
